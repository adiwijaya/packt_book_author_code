{
  "pipelineSpec": {
    "components": {
      "comp-load-data-from-bigquery": {
        "executorLabel": "exec-load-data-from-bigquery",
        "inputDefinitions": {
          "parameters": {
            "output_gcs_bucket": {
              "type": "STRING"
            },
            "public_table_id": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "Output": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-predict-batch": {
        "executorLabel": "exec-predict-batch",
        "inputDefinitions": {
          "parameters": {
            "gcs_bucket": {
              "type": "STRING"
            },
            "model_path": {
              "type": "STRING"
            },
            "output_path": {
              "type": "STRING"
            },
            "predict_file_path": {
              "type": "STRING"
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-load-data-from-bigquery": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "load_data_from_bigquery"
            ],
            "command": [
              "sh",
              "-c",
              "(python3 -m ensurepip || python3 -m ensurepip --user) && (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet                 --no-warn-script-location 'google-cloud-bigquery' 'google-cloud-storage' 'pandas' 'pyarrow' 'kfp==1.8.0' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet                 --no-warn-script-location 'google-cloud-bigquery' 'google-cloud-storage' 'pandas' 'pyarrow' 'kfp==1.8.0' --user) && \"$0\" \"$@\"",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef load_data_from_bigquery(public_table_id: str, output_gcs_bucket: str) -> str:\n    from google.cloud import bigquery\n    from google.cloud import storage\n\n    project_id = \"aw-general-dev\"\n    output_file = \"aipipeline-root/credit-card-default/artefacts/predict.csv\"\n\n    bq_client = bigquery.Client(project=project_id)\n    sql = f\"\"\"SELECT limit_balance, education_level, age FROM `{public_table_id}` LIMIT 10;\"\"\"\n    dataframe = (bq_client.query(sql).result().to_dataframe())\n\n    gcs_client = storage.Client(project=project_id)\n    bucket = gcs_client.get_bucket('aw-general-dev')\n    bucket.blob(output_file).upload_from_string(dataframe.to_csv(index=False), 'text/csv')\n\n    return output_file\n\n"
            ],
            "image": "python:3.7"
          }
        },
        "exec-predict-batch": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "predict_batch"
            ],
            "command": [
              "sh",
              "-c",
              "(python3 -m ensurepip || python3 -m ensurepip --user) && (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet                 --no-warn-script-location 'google-cloud-storage' 'pandas' 'scikit-learn==0.21.3' 'fsspec' 'gcsfs' 'kfp==1.8.0' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet                 --no-warn-script-location 'google-cloud-storage' 'pandas' 'scikit-learn==0.21.3' 'fsspec' 'gcsfs' 'kfp==1.8.0' --user) && \"$0\" \"$@\"",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef predict_batch(gcs_bucket: str, predict_file_path: str, model_path: str, output_path: str):\n    from sklearn.externals import joblib\n    from google.cloud import storage\n    import pandas as pd\n\n    project_id = \"aw-general-dev\"\n    model_local_uri = \"cc_default_rf_model.joblib\"\n    gcs_client = storage.Client(project=project_id)\n    bucket = gcs_client.get_bucket(gcs_bucket)\n\n    # Load predict data from GCS to pandas\n    dataframe = pd.read_csv(f'gs://{gcs_bucket}/{predict_file_path}')\n\n    # Load ML model from GCS\n    model_file = bucket.blob(model_path)\n    model_file.download_to_filename(model_local_uri)\n    loaded_model = joblib.load(model_local_uri)\n\n    # Predict\n    prediction = loaded_model.predict(dataframe)\n    prediction = pd.DataFrame(prediction)\n\n    # Store prediction to GCS\n    bucket.blob(output_path).upload_from_string(prediction.to_csv(index=False), 'text/csv')\n\n    print(f\"Prediction file path: {output_path}\")\n\n"
            ],
            "image": "python:3.7"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "credit-default-ml-pipeline-predict"
    },
    "root": {
      "dag": {
        "tasks": {
          "load-data-from-bigquery": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-load-data-from-bigquery"
            },
            "inputs": {
              "parameters": {
                "output_gcs_bucket": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "aw-general-dev"
                    }
                  }
                },
                "public_table_id": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "bigquery-public-data.ml_datasets.credit_card_default"
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "load-data-from-bigquery"
            }
          },
          "predict-batch": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-predict-batch"
            },
            "dependentTasks": [
              "load-data-from-bigquery"
            ],
            "inputs": {
              "parameters": {
                "gcs_bucket": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "aw-general-dev"
                    }
                  }
                },
                "model_path": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "aipipeline-root/credit-card-default/artefacts/cc_default_rf_model.joblib"
                    }
                  }
                },
                "output_path": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "aipipeline-root/credit-card-default/artefacts/prediction.csv"
                    }
                  }
                },
                "predict_file_path": {
                  "taskOutputParameter": {
                    "outputParameterKey": "Output",
                    "producerTask": "load-data-from-bigquery"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "predict-batch"
            }
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.0"
  },
  "runtimeConfig": {
    "gcsOutputDirectory": "gs://aw-general-dev/aipipeline-root/credit-card-default"
  }
}